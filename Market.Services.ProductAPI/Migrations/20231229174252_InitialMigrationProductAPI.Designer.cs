// <auto-generated />
using System;
using Market.Services.ProductAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Market.Services.ProductAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231229174252_InitialMigrationProductAPI")]
    partial class InitialMigrationProductAPI
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Market.Domain.Models.Category", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IsDeleted")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2023, 12, 29, 12, 42, 51, 206, DateTimeKind.Local).AddTicks(5955),
                            CreatedBy = "SYSTEM",
                            Description = "",
                            IsDeleted = 0,
                            Name = "Appetizer",
                            UpdatedAt = new DateTime(2023, 12, 29, 12, 42, 51, 206, DateTimeKind.Local).AddTicks(5966),
                            UpdatedBy = "SYSTEM"
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2023, 12, 29, 12, 42, 51, 206, DateTimeKind.Local).AddTicks(5993),
                            CreatedBy = "SYSTEM",
                            Description = "",
                            IsDeleted = 0,
                            Name = "Dessert",
                            UpdatedAt = new DateTime(2023, 12, 29, 12, 42, 51, 206, DateTimeKind.Local).AddTicks(5993),
                            UpdatedBy = "SYSTEM"
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(2023, 12, 29, 12, 42, 51, 206, DateTimeKind.Local).AddTicks(6001),
                            CreatedBy = "SYSTEM",
                            Description = "",
                            IsDeleted = 0,
                            Name = "Entree",
                            UpdatedAt = new DateTime(2023, 12, 29, 12, 42, 51, 206, DateTimeKind.Local).AddTicks(6001),
                            UpdatedBy = "SYSTEM"
                        });
                });

            modelBuilder.Entity("Market.Domain.Models.Product", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IsDeleted")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CategoryName = "Appetizer",
                            CreatedAt = new DateTime(2023, 12, 29, 12, 42, 51, 206, DateTimeKind.Local).AddTicks(6016),
                            CreatedBy = "SYSTEM",
                            Description = "El Pisco Sour es la bebida nacional peruana y un símbolo como tal del estilo de vida sudamericano. El “Pisco Sour” es un cóctel de Perú hecho a base de Pisco, que se sirve como aperitivo. Por la acidez característica de su limón es refrescante y vigorizante, y alegra cualquier reunión.",
                            ImageUrl = "https://elcomercio.pe/resizer/_qzltzlrDcohFgUmpZ4DCbGX0Ss=/1200x800/smart/filters:format(jpeg):quality(75)/cloudfront-us-east-1.images.arcpublishing.com/elcomercio/66DKHZCFLVBE3EY2IYWUGLEOIE.png",
                            IsDeleted = 0,
                            Name = "Pisco Sour",
                            Price = 25.0,
                            UpdatedAt = new DateTime(2023, 12, 29, 12, 42, 51, 206, DateTimeKind.Local).AddTicks(6017),
                            UpdatedBy = "SYSTEM"
                        },
                        new
                        {
                            Id = 2L,
                            CategoryName = "Appetizer",
                            CreatedAt = new DateTime(2023, 12, 29, 12, 42, 51, 206, DateTimeKind.Local).AddTicks(6030),
                            CreatedBy = "SYSTEM",
                            Description = "El anticucho es un tipo de brocheta de origen peruano,​ que posteriormente se volvió popular en algunos países sudamericanos con diferentes variaciones. Consiste en carne y otros alimentos que se asan ensartados en un pincho.",
                            ImageUrl = "https://www.comedera.com/wp-content/uploads/2022/03/Anticucho-shutterstock_185287433.jpg",
                            IsDeleted = 0,
                            Name = "Anticuchos",
                            Price = 20.989999999999998,
                            UpdatedAt = new DateTime(2023, 12, 29, 12, 42, 51, 206, DateTimeKind.Local).AddTicks(6030),
                            UpdatedBy = "SYSTEM"
                        },
                        new
                        {
                            Id = 3L,
                            CategoryName = "Dessert",
                            CreatedAt = new DateTime(2023, 12, 29, 12, 42, 51, 206, DateTimeKind.Local).AddTicks(6039),
                            CreatedBy = "SYSTEM",
                            Description = "El suspiro limeño, suspiro de limeña o suspiro a la limeña es un postre tradicional peruano cuyo nombre hace referencia a su capital, Lima: “suspiro de Lima”. El lento proceso de cocción de esta receta da como resultado una base de natillas doradas, suave y sedosa, similar al caramelo, que luego se corona con un merengue de licor cremoso y ligero.",
                            ImageUrl = "https://assets.elgourmet.com/wp-content/uploads/2023/03/cover_siu6kem1v7_eg-lidg-platos-suspiro-limeno-hi-02-1024x683.jpg",
                            IsDeleted = 0,
                            Name = "Suspiro a la Limeña",
                            Price = 12.99,
                            UpdatedAt = new DateTime(2023, 12, 29, 12, 42, 51, 206, DateTimeKind.Local).AddTicks(6039),
                            UpdatedBy = "SYSTEM"
                        },
                        new
                        {
                            Id = 4L,
                            CategoryName = "Entree",
                            CreatedAt = new DateTime(2023, 12, 29, 12, 42, 51, 206, DateTimeKind.Local).AddTicks(6048),
                            CreatedBy = "SYSTEM",
                            Description = "La causa es uno de los platos más famosos de la comida peruana. Y esta causa limeña con pulpo al olivo es de las más coloridas y deliciosas. Las causas puedes rellenarlas de pollo, atún o camarones mezclados simplemente con mayonesa.",
                            ImageUrl = "https://media-cdn.tripadvisor.com/media/photo-s/1d/6b/de/5a/causa-peruana-con-pulpo.jpg",
                            IsDeleted = 0,
                            Name = "Causa al Olivo",
                            Price = 35.0,
                            UpdatedAt = new DateTime(2023, 12, 29, 12, 42, 51, 206, DateTimeKind.Local).AddTicks(6049),
                            UpdatedBy = "SYSTEM"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
